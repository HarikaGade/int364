TASK1:EC2 INSTANCE
1)CLICK EC2 IN CONSOLE
2)CLICK LAUNCH INSTANCE
3)GIVE NAME OF INSTANCE
4)KEY PAIR AS VOCKEY
5)IN ADDITIONAL INFO 
PASTE THIS
yum update -y
yum install -y httpd.x86_64
systemctl start httpd.service
systemctl enable httpd.service
6)CLICK LAUNCH INSTANCE
7)INSTANCE LAUNCHED
8)CLICK ON INSTANCE AND GO TO SECURITY TAB
9)CLICK ON SECURITY GROUP LINK
10)EDIT INBOUND RULES
11)ADD INBOUNDRULE
12)SELECT CUSTOM TCP,PORT 80,SOURCE ANYWHERE1PV4.
13)ADD RULE
---------------------------------------------------------------------------
---------------------------------------------------------------------------
TASK2:Host a static website by using Amazon S3.  Implement one way to protect your data with Amazon S3.  Implement a data lifecycle strategy in Amazon S3. 
1)Go to the Amazon S3 Console.
2)Click Create bucket.
3)Bucket name: harika
4)Uncheck "Block all public access" to allow public access for your static website.
5)Click Create bucket.
6)Open your bucket.
7)Click Upload and add your website files (e.g., index.html, style.css).
create file with index.html name and add content in it then upload to s3 bucket 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Welcome to My Website</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <header>
        <h1>Welcome to My Static Website</h1>
        <nav>
            <ul>
                <li><a href="#home">Home</a></li>
                <li><a href="#about">About</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
        </nav>
    </header>
    <main>
        <section id="home">
            <h2>Home</h2>
            <p>This is a simple static website hosted on Amazon S3.</p>
        </section>
        <section id="about">
            <h2>About</h2>
            <p>This website is an example of how you can use S3 to host static content.</p>
        </section>
        <section id="contact">
            <h2>Contact</h2>
            <p>Email: example@example.com</p>
        </section>
    </main>
    <footer>
        <p>&copy; 2024 My Static Website</p>
    </footer>
</body>
</html>
-------------------------------------------------------------------------
create file with this name style.css and add below content to it and then add this file to s3 bucket 
/* General Styles */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    line-height: 1.6;
    color: #333;
}

/* Header Styles */
header {
    background: #0073e6;
    color: #fff;
    padding: 1em 0;
    text-align: center;
}

header h1 {
    margin: 0;
    font-size: 2.5em;
}

header nav ul {
    list-style: none;
    padding: 0;
}

header nav ul li {
    display: inline;
    margin: 0 10px;
}

header nav ul li a {
    color: #fff;
    text-decoration: none;
}

/* Section Styles */
section {
    margin: 20px;
    padding: 10px;
    background: #f4f4f4;
    border-radius: 5px;
}

/* Footer Styles */
footer {
    text-align: center;
    background: #333;
    color: #fff;
    padding: 1em 0;
    margin-top: 20px;
}
8)Click Upload to complete.
Enable Static Website Hosting:
9)Go to the Properties tab of your bucket.
10)Scroll to Static website hosting and click Edit.
11)Select Enable.
12)Specify the index document (e.g., index.html).
13)Save the changes.
Make Files Public:
14)Go to the Permissions tab, then Bucket Policy.
15)Add this policy (replace your-bucket-name with your bucket name):
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "PublicReadGetObject",
      "Effect": "Allow",
      "Principal": "*",
      "Action": "s3:GetObject",
      "Resource": "arn:aws:s3:::your-bucket-name/*"
    }
  ]
}
16)Access Your Website:
17)Return to the Properties tab.
18)Under Static website hosting, note the Endpoint URL.
19)Open this URL to view your website.
-----------------------------------------------------------------------------
Implement a Data Lifecycle Strategy in Amazon S3
20)Create a Lifecycle Rule:
21)Go to the Management tab of your bucket.
22)Click Lifecycle rules and then Create lifecycle rule.
23)Provide a name (e.g., move-to-glacier).
Define Rule Scope:
Choose to apply the rule to the entire bucket or specific prefixes/tags.
Configure Transition Actions:
Add a Transition action to move objects to lower-cost storage classes:
E.g., Move to S3 Glacier after 30 days.
(Optional) Configure expiration to delete objects after a specified time.
Review and Save:
Review the rule configuration.
Click Save.
--------------------------------------------------------------------------------
-------------------------------------------------------------------------------
TASK3:creation of virtual private cloud(vpc)
1)in search box search vpc
2)click on create vpc
3)give name to vpc (example:harika )
4)IPv4 CIDR: Enter 10.0.0.0/16.
5)leave all settings as default and click on create vpc 
6)your vpc is create successfully
------------------------------------------------------------------------------------
after creation of vpc if we want to edit configuration then 
7)Choose Actions, and choose Edit VPC settings.
8)For DNS settings, select Enable DNS hostnames.
9)Choose Save.
CREATION OF SUBNETS
CREATING PUBLIC SUBNET
1)In the left navigation pane, choose Subnets.
2)Choose Create subnet.
3)FOR VPC ID:SELECT VPC WHICH U CREATED (CAUSE WE ARE CREATING SUBNETS IN IT SO)
4)SUBNET NAME:ANY(EX:public subnet)
5)Availability Zone: Choose the first Availability Zone in the list.
6)IPv4 subnet CIDR block: Enter 10.0.0.0/24.
7)click create subnet
-------------------------------------------------------------------------------
after creation of public subnet if we want to edit then 
8)Choose Actions, and then choose Edit subnet settings.
9)On the Edit subnet settings page, for Auto-assign IP settings, select Enable auto-assign public IPv4 address.
then click save your changes saved
--------------------------------------------------------------------------------
CREATION OF PRIVATE SUBNET
1)In the left navigation pane, choose Subnets.
2)Choose Create subnet.
3)FOR VPC ID:SELECT VPC WHICH U CREATED (CAUSE WE ARE CREATING SUBNETS IN IT SO)
4)name:(ex:private subnets)
5)Availability Zone: Choose the first Availability Zone in the list.
6)IPv4 subnet CIDR block: Enter 10.0.2.0/23.
click on create ,your subnet is created successfully
------------------------------------------------------------------------------------------
Creating an internet gateway
1)In the left navigation pane, choose Internet gateways.
2)Choose Create internet gateway.
3)nametag:internetgateway
4)Choose Create internet gateway.
gateway created successfully
You can now attach the internet gateway to your VPC.
5)Choose Actions, and then choose Attach to VPC.
6)For Available VPCs, choose your VPC
----------------------------------------------------------------------------------------------
Configuring route tables
1)In the left navigation pane, choose Route tables.
2)select routetable that shows your vpc name
3)In the Name column, choose the edit icon , and for Edit Name, enter Private Route Table.
4)click save
5)Choose the Routes tab.
You now create a new public route table to send public traffic to the internet gateway.
1)Choose Create route table, and configure these settings:
2)Name - optional: Enter Public Route Table.
3)VPC: Choose your VPC.
4)Choose Create route table.
5)In the Routes tab, choose Edit routes.
6)Choose Add route, then configure these settings:
7)Destination: Enter 0.0.0.0/0.
8)Target: Choose Internet Gateway and then, from the list, choose your Internetgateway.
9)click on save changes
Next, you associate this new route table with the public subnet.
10)Choose the Subnet associations tab.
11)Choose Edit subnet associations.
12)Select the row with Public Subnet.
13)Choose Save associations.
-------------------------------------------------------------------------------------------------
Creating a security group for the application server
1)In the left navigation pane, choose Security groups.
2)Choose Create security group.
3)Security group name: securitygroup.
4)Description: Enter Allow HTTP traffic.
5)vpc:choose your vpc
6)In the Inbound rules section, choose Add rule, and then configure the following options:
7)Type: Choose HTTP.
8)Source: Choose Anywhere-IPv4.
9)Description - optional: Enter Allow web access.
10)create security group
--------------------------------------------------------------------------------------------------
Task 6: Launching an application server in the public subnet
To test that your VPC is correctly configured, you now launch an EC2 instance into the public subnet. You also confirm that you can access the EC2 instance from the internet.
On the AWS Management Console, in the search box, enter and choose EC2 to open the Amazon EC2 console.
1)Choose Launch instance.
2)For Name, enter App Server.
3)In the Application and OS Images (Amazon Machine Image) section, configure the following options:
4)For  Quick Start, keep the default Amazon Linux option. 
5)For Amazon Machine Image (AMI), keep the default Amazon Linux 2023 AMI option.
6)In the Instance type section, keep the default t2.micro option.
For Key pair name - required, choose vockey.
In the Network settings section, choose Edit, and then configure the following options: 
6)For VPC - required, choose your VPC.
7)For Subnet, choose Public Subnet.
8)For Firewall (security groups), choose Select existing security group.
9)For Common security groups, choose App-SG.
10)In the Configure storage section, keep the default settings.
11)Expand the Advanced details panel, and for IAM instance profile, choose Inventory-App-Role.

This role, which was created when you provisioned the lab, is required for the application to access the database credentials securely stored in AWS Secrets Manager.

In the User data box, copy and paste the following code:

#!/bin/bash
# Install Apache Web Server and PHP
dnf install -y httpd wget php-fpm php-mysqli php-json php php-devel
dnf install -y mariadb105-server
# Download Lab files
wget https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/CUR-TF-200-ACACAD-3-113230/06-lab-mod7-guided-VPC/s3/scripts/al2023-inventory-app.zip -O inventory-app.zip
unzip inventory-app.zip -d /var/www/html/
# Download and install the AWS SDK for PHP
wget https://docs.aws.amazon.com/aws-sdk-php/v3/download/aws.zip
unzip aws.zip -d /var/www/html
# Turn on web server
systemctl enable httpd
systemctl start httpd
In the Summary section, choose Launch instance.
You should see a Success message.
Choose the link to the new instance that you created. 
Wait until the App Server instance shows 2/2 checks passed in the Status check column.
This might take a few minutes. Choose the refresh  icon at the top of the page every 30 seconds or so to check the status of the instance.
Select App Server.
From the Details tab, copy the Public IPv4 DNS value.
Open a new web browser tab, and enter this public IPv4 DNS value.
If you configured the VPC correctly, the Inventory application and this message should appear: Please configure Settings to connect to database. The appearance of the Inventory application demonstrates that the public subnet was correctly configured.
If the Inventory application does not appear, wait 60 seconds and refresh  the page to try again. It can take a couple of minutes for the EC2 instance to boot and run the script that installs the software.
----------------------------------------------------------------------------------
------------------------------------------------------------------------------------
TASK4:Creating an Amazon RDS Database
1)search for rds in search box
2)choose create data base
3)Under Engine options, select MySQL.
4)Under the Templates section, select  Dev/Test.
5)Under the Availability and durability section, select   Single DB instance 
6)under setting section give DB instance identifier: any(ex:harika)
7)Under Credentials management, choose Self managed
Master password: lab-password
Confirm master password: lab-password
8)Under the Instance configuration section, configure these options:
Select Burstable classes (includes t classes).
Select db.t3.micro
9)In the Storage section next
For Storage type choose General Purpose SSD (gp2),allocate storage=20
10)Expand Storage autoscaling 
Clear or Deselect Enable storage autoscaling.
11)connectivity section keep as default
12)Under Monitoring section, Clear (turn off) the Enable Enhanced monitoring option
13)in Additional configuration panel, give name to database:any(ex:harika)
14)click on create database
15)sucessfully database is created.
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
Task 5: Creating a NAT gateway
In this task, you create a NAT gateway, which enables resources in the Private Subnet to connect to the internet.
1)click on create nat gateway
2)Name - optional: Enter Lab NAT Gateway.
3)Subnet: Choose Public Subnet.
4)Elastic IP allocation ID: Choose Allocate Elastic IP.
then click on create .After this 
Create a new route table that has the following options:
5)go to route tables and click on create route tables
6)Name - optional: Enter Private Route Table.
7)VPC: Chose your VPC or default vpc.
8)Attach this route table to the Private Subnet that you created earlier using the following options: 
Destination: Enter 0.0.0.0/0.
Target: Choose NAT Gateway.
--------------------------------------------------------------
---------------------------------------------------------------
TASK 6)VPC PEERING 













 














